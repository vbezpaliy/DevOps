https://git-scm.com/book/ru/v1/%D0%9E%D1%81%D0%BD%D0%BE%D0%B2%D1%8B-Git-%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5-Git-%D1%80%D0%B5%D0%BF%D0%BE%D0%B7%D0%B8%D1%82%D0%BE%D1%80%D0%B8%D1%8F
https://www.8host.com/blog/ustanovka-i-nastrojka-gitlab-v-ubuntu-18-04/
https://serveradmin.ru/ustanovka-i-nastroyka-gitlab/

how to install and configure gitlab on Ubuntu
https://www.digitalocean.com/community/tutorials/how-to-install-and-configure-gitlab-on-ubuntu-18-04

install gitlab ce - не комерч

https://about.gitlab.com/install/#debian?version=ce

sudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8

or ==> (меняем локацию)

vim /etc/default/locale

LANGUAGE=en_US.UTF-8
LC_ALL=en_US.UTF-8
LANG=en_US.UTF-8
LC_TYPE=en_US.UTF-8

locale-gen en_US.UTF-8 && dpkg-reconfigure locales

Отслеживаем логи
tail -f /var/log/gitlab/gitlab-rails/production.log

Вслучае необходимости редактируем конфиг
vim /etc/gitlab/gitlab.rb

перезапускаем
gitlab-ctl reconfigure

В случае необходимости можем удалить полностю с компютера
apt-get remove --purge PACKAGE

**********************************************************

Learning
https://ru.hexlet.io/courses/cli-basics
https://learngitbranching.js.org/
https://githowto.com/uk
https://ru.hexlet.io/courses/intro_to_git (edited)

*********************************************************

Рекомендации

В этом подразделе представлены обязательные методики (правила) разработки програмного продукта, соблюдение которых 
повышает его качество, стабильность работы и являются догмой работоспособности системы непрерывной интеграции.

Не регистрируйте изменения в нерабочей сборке (пока не завершится build нельзя осуществлять merge) - нарушение 
этого правила неизбежно ведет к увеличению времени исправления ошибки

Не оставляйте сборку в нерабочем состоянии после работы. В случае возникающей ситуации, когда с этой нерабочей 
сборкой начинают работать ни о чем не подозревающие коллеги, результатом может быть только негатив. 

Многие опытные разработчики не регистрируют изменения позже, чем за час до конца рабочего дня или выполняют эту 
операцию следующим утром в первую очередь

Более того отличным подходом является соблюдение правила "10 минут": если сборка разрушается при регистрации, 
на попытки ее исправления отведено 10 минут, по истечению которых все еще нерабочая сборка отменяется (выпиливается commit)

Не отключайте тесты (более 2%) в случае сбоя и дожидайтесь завершение всех тестов перед регистрацией. 
Тесты гарантируют целостность сборки, позволяют исключить ошибки при совместной работе с кодом, а их отмена 
ведет к отмене сборки

Всегда будьте готовы вернуться к предыдущей версии. К ошибкам нужно относится, как к обычному (хоть и неприятному) 
процессу разработки, к ним просто нужно быть готовым: для этого и предназначена система управления версиями

Отвечайте за сбои, произошедшие из-за ваших изменений - испорченый код исправляет тот, кто его поламал

Необходимо следить за методикой кодирования разработчиков с помощью инструментов, предназначенных для 
проверки кода (обнаружение дублирование кода, метрика качества кода)
